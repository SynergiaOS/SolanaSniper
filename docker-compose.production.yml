version: '3.8'

services:
  # Main SniperBot application - PRODUCTION
  sniper-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sniperbot-production
    restart: unless-stopped
    ports:
      - "8084:8084"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./configs:/app/configs
    env_file:
      - .env.production
    environment:
      - RUST_LOG=info
      - BOT_ENVIRONMENT=production
      - DRAGONFLY_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - sniperbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching (production-ready)
  redis:
    image: redis:7-alpine
    container_name: sniperbot-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - sniperbot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3



volumes:
  redis_data:

networks:
  sniperbot-network:
    driver: bridge
